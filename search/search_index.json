{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"placeholder/","text":"This is a placeholder for the respective doc content","title":"Placeholder"},{"location":"faq/experiments/placeholder/","text":"","title":"Experiments"},{"location":"faq/install/placeholder/","text":"","title":"Install"},{"location":"faq/integrations/placeholder/","text":"","title":"Integrations"},{"location":"faq/platform/placeholder/","text":"","title":"Platform"},{"location":"overview/placeholder/","text":"Harness Chaos Engineering \u00b6 What Is Cloud-Native Chaos Engineering? \u00b6 https://www.chaosnative.com/blog/principles_of_cloud_native Why Is It Necessary? \u00b6 How Does HCE Help? \u00b6 HCE Platform Overview \u00b6 How It Works \u00b6 Basic user flow HCE v/s LitmusChaos \u00b6 Table Target Support Matrix \u00b6 Table Blog Links, Presentation/Video References \u00b6 HCE presentations","title":"HCE Overview"},{"location":"overview/placeholder/#harness-chaos-engineering","text":"","title":"Harness Chaos Engineering"},{"location":"overview/placeholder/#what-is-cloud-native-chaos-engineering","text":"https://www.chaosnative.com/blog/principles_of_cloud_native","title":"What Is Cloud-Native Chaos Engineering?"},{"location":"overview/placeholder/#why-is-it-necessary","text":"","title":"Why Is It Necessary?"},{"location":"overview/placeholder/#how-does-hce-help","text":"","title":"How Does HCE Help?"},{"location":"overview/placeholder/#hce-platform-overview","text":"","title":"HCE Platform Overview"},{"location":"overview/placeholder/#how-it-works","text":"Basic user flow","title":"How It Works"},{"location":"overview/placeholder/#hce-vs-litmuschaos","text":"Table","title":"HCE v/s LitmusChaos"},{"location":"overview/placeholder/#target-support-matrix","text":"Table","title":"Target Support Matrix"},{"location":"overview/placeholder/#blog-links-presentationvideo-references","text":"HCE presentations","title":"Blog Links, Presentation/Video References"},{"location":"technical-reference/APIs/chaos-manager/placeholder/","text":"","title":"Chaos Manager"},{"location":"technical-reference/chaos-center/placeholder/","text":"","title":"Chaos Center"},{"location":"technical-reference/chaos-delegates/placeholder/","text":"","title":"Chaos Delegates"},{"location":"technical-reference/chaos-experiments/placeholder/","text":"","title":"Chaos Experiments"},{"location":"technical-reference/content/placeholder/","text":"","title":"Contents"},{"location":"technical-reference/enterprise-hubs/placeholder/","text":"","title":"Enterprise Hubs"},{"location":"technical-reference/hypothesis-validation/placeholder/","text":"","title":"Hypothesis Validation"},{"location":"technical-reference/monitoring/placeholder/","text":"","title":"Monitoring"},{"location":"troubleshooting/experiments/placeholder/","text":"","title":"Experiments"},{"location":"troubleshooting/install/placeholder/","text":"","title":"Install"},{"location":"troubleshooting/integrations/placeholder/","text":"","title":"Integrations"},{"location":"troubleshooting/platform/placeholder/","text":"","title":"Platform"},{"location":"user-guide/analyze-chaos-runs/placeholder/","text":"","title":"Analyze Chaos Runs"},{"location":"user-guide/build-your-own-chaos-experiments/placeholder/","text":"","title":"Placeholder"},{"location":"user-guide/cleanup-harness-chaos-installation/chaos-delegate-disconnect/","text":"","title":"Disconnect Chaos Delegates"},{"location":"user-guide/cleanup-harness-chaos-installation/cleanup-litmus-installation/","text":"","title":"Uninstall HCE platform"},{"location":"user-guide/cleanup-harness-chaos-installation/content/","text":"","title":"Content"},{"location":"user-guide/connect-chaos-delegates/ToDo/","text":"Host the download matrix in some common location HCE free SaaS is out of the picture, hence no compatibility matrix needs to be maintained for this Link to troubleshooting section for chaosctl errors","title":"ToDo"},{"location":"user-guide/connect-chaos-delegates/placeholder/","text":"Connect Remote Chaos Delegates to Chaos Center \u00b6 Objective \u00b6 Connect cluster-scoped OR namespace-scoped Chaos Delegates to enable chaos experimentation on remote Kubernetes clusters. Become familiar with interactive and non-interactive mode of the CLI tool chaosctl Before You Begin \u00b6 Ensure that you have installed the Harness Chaos Engineering Control Plane . Learn about Chaos Delegates Download chaosctl , a CLI tool to aid in user authentication and installation of the Chaos Delegate in the Kubernetes cluster Steps \u00b6 Summary \u00b6 Next Steps \u00b6","title":"Connect Chaos Delegates"},{"location":"user-guide/connect-chaos-delegates/placeholder/#connect-remote-chaos-delegates-to-chaos-center","text":"","title":"Connect Remote Chaos Delegates to Chaos Center"},{"location":"user-guide/connect-chaos-delegates/placeholder/#objective","text":"Connect cluster-scoped OR namespace-scoped Chaos Delegates to enable chaos experimentation on remote Kubernetes clusters. Become familiar with interactive and non-interactive mode of the CLI tool chaosctl","title":"Objective"},{"location":"user-guide/connect-chaos-delegates/placeholder/#before-you-begin","text":"Ensure that you have installed the Harness Chaos Engineering Control Plane . Learn about Chaos Delegates Download chaosctl , a CLI tool to aid in user authentication and installation of the Chaos Delegate in the Kubernetes cluster","title":"Before You Begin"},{"location":"user-guide/connect-chaos-delegates/placeholder/#steps","text":"","title":"Steps"},{"location":"user-guide/connect-chaos-delegates/placeholder/#summary","text":"","title":"Summary"},{"location":"user-guide/connect-chaos-delegates/placeholder/#next-steps","text":"","title":"Next Steps"},{"location":"user-guide/create-custom-chaos-scenarios/placeholder/","text":"","title":"Create Custom Chaos Scenarios"},{"location":"user-guide/create-your-own-chaoshubs/placeholder/","text":"","title":"Placeholder"},{"location":"user-guide/define-hypothesis-using-probes/placeholder/","text":"","title":"Define Hypothesis Using Probes"},{"location":"user-guide/include-chaos-in-harness-pipelines/placeholder/","text":"","title":"Placeholder"},{"location":"user-guide/installation/kubernetes/ToDo/","text":"Docs Notes \u00b6 No reference to free SaaS will be made in the interim. Post Beta (Nov), we will redirect to beta page. Until the on-prem version of integrated chaos module is available Advanced install section needs to be added to cover the following (Post Docs MVP): Install on different service types (ex: Ingress) Install with non-default storage class Install with OpenShift Install with resource requests/limits Install with Self-Agent set to false","title":"Docs Notes"},{"location":"user-guide/installation/kubernetes/ToDo/#docs-notes","text":"No reference to free SaaS will be made in the interim. Post Beta (Nov), we will redirect to beta page. Until the on-prem version of integrated chaos module is available Advanced install section needs to be added to cover the following (Post Docs MVP): Install on different service types (ex: Ingress) Install with non-default storage class Install with OpenShift Install with resource requests/limits Install with Self-Agent set to false","title":"Docs Notes"},{"location":"user-guide/installation/kubernetes/placeholder/","text":"Install the Harness Chaos Engineering Platform \u00b6 Objectives \u00b6 Install Harness Chaos Engineering in a Kubernetes cluster. Before You Begin \u00b6 Kubernetes cluster: A general purpose compute engine like GCP e2-standard-2 is sufficient. Kubernetes >= 1.21. A default storage class with 20GB usable disk space for the Persistent Volume Helm 3 installed in the cluster. See Installing Helm from Helm. Install Options \u00b6 helm \u00b6 Add the Harness Helm repository: helm repo add harness https://hce.chaosnative.com View the repo: helm repo list Output: NAME URL harness https://hce.chaosnative.com Update the Harness Helm repo: helm repo update Output: Hang tight while we grab the latest from your chart repositories... ...Successfully got an update from the \"harness\" chart repository Update Complete. \u2388Happy Helming!\u2388 Install Harness Chaos Engineering ChaosCenter: helm install -n litmus hce harness/hce --create-namespace Output: NAME: hce LAST DEPLOYED: Wed Aug 3 16:27:37 2022 NAMESPACE: litmus STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: Thank you for installing hce \ud83d\ude00 Your release is named hce and it's installed to namespace: litmus. Visit https://harness.io to find more info. kubectl \u00b6 Install Harness Chaos Engineering with cluster-admin permissions in the litmus namespace by default. kubectl apply -f https://hce.chaosnative.com/manifests/latest/hce-cluster-scope.yaml Verify Installation \u00b6 Verify that all pods are brought up successfully in the litmus namespace Now, the HCE control plane is successfully brought up in your Kubernetes cluster. To learn more about the various control plane components, refer the technical reference section. Access ChaosCenter \u00b6 By default, Harness Chaos Engineering is accessed using a LoadBalancer. View the LoadBalancer IP (this can take a few minutes): kubectl get svc -n litmus Example output using a helm install: NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE hce-auth-server-service NodePort 10.24.5.26 <none> 9003:32156/TCP,3030:31024/TCP 2m28s hce-frontend-service LoadBalancer 10.24.15.215 34.173.193.67 9091:32631/TCP 2m28s hce-headless-mongo ClusterIP None <none> 27017/TCP 2m28s hce-mongo ClusterIP 10.24.14.6 <none> 27017/TCP 2m28s hce-server-service LoadBalancer 10.24.11.20 34.67.119.129 9002:31108/TCP,8000:30292/TCP 2m28s license-service NodePort 10.24.13.205 <none> 80:31560/TCP 2m28s The EXTERNAL-IP might say pending for a few minutes while the load balancer is set up. Simply use your EXTERNAL-IP and PORT for the hce-frontend-service in this manner : to access Harness Chaos Engineering: http:// : . For example: http://34.71.48.119:9091/ This is an example IP and port. Yours will be different. ChaosCenter is displayed in your browser: Log in with the default credentials: Username: admin Password: litmus Once you log in, you'll be asked to set a new password. License Activation \u00b6 Next, upload your license file and click Activate License. You can request a license from the Harness Chaos Engineering sign up page . Drag and drop your license into Upload License File and click Activate License. You're ready to go. Summary \u00b6 You have successfully installed the Harness Chaos Engineering Control Plane and configured the Admin project Next Steps \u00b6 Run your first Chaos Scenario on HCE after verifying the successful auto setup of the Self Chaos Delegate.","title":"Installation"},{"location":"user-guide/installation/kubernetes/placeholder/#install-the-harness-chaos-engineering-platform","text":"","title":"Install the Harness Chaos Engineering Platform"},{"location":"user-guide/installation/kubernetes/placeholder/#objectives","text":"Install Harness Chaos Engineering in a Kubernetes cluster.","title":"Objectives"},{"location":"user-guide/installation/kubernetes/placeholder/#before-you-begin","text":"Kubernetes cluster: A general purpose compute engine like GCP e2-standard-2 is sufficient. Kubernetes >= 1.21. A default storage class with 20GB usable disk space for the Persistent Volume Helm 3 installed in the cluster. See Installing Helm from Helm.","title":"Before You Begin"},{"location":"user-guide/installation/kubernetes/placeholder/#install-options","text":"","title":"Install Options"},{"location":"user-guide/installation/kubernetes/placeholder/#helm","text":"Add the Harness Helm repository: helm repo add harness https://hce.chaosnative.com View the repo: helm repo list Output: NAME URL harness https://hce.chaosnative.com Update the Harness Helm repo: helm repo update Output: Hang tight while we grab the latest from your chart repositories... ...Successfully got an update from the \"harness\" chart repository Update Complete. \u2388Happy Helming!\u2388 Install Harness Chaos Engineering ChaosCenter: helm install -n litmus hce harness/hce --create-namespace Output: NAME: hce LAST DEPLOYED: Wed Aug 3 16:27:37 2022 NAMESPACE: litmus STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: Thank you for installing hce \ud83d\ude00 Your release is named hce and it's installed to namespace: litmus. Visit https://harness.io to find more info.","title":"helm"},{"location":"user-guide/installation/kubernetes/placeholder/#kubectl","text":"Install Harness Chaos Engineering with cluster-admin permissions in the litmus namespace by default. kubectl apply -f https://hce.chaosnative.com/manifests/latest/hce-cluster-scope.yaml","title":"kubectl"},{"location":"user-guide/installation/kubernetes/placeholder/#verify-installation","text":"Verify that all pods are brought up successfully in the litmus namespace Now, the HCE control plane is successfully brought up in your Kubernetes cluster. To learn more about the various control plane components, refer the technical reference section.","title":"Verify Installation"},{"location":"user-guide/installation/kubernetes/placeholder/#access-chaoscenter","text":"By default, Harness Chaos Engineering is accessed using a LoadBalancer. View the LoadBalancer IP (this can take a few minutes): kubectl get svc -n litmus Example output using a helm install: NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE hce-auth-server-service NodePort 10.24.5.26 <none> 9003:32156/TCP,3030:31024/TCP 2m28s hce-frontend-service LoadBalancer 10.24.15.215 34.173.193.67 9091:32631/TCP 2m28s hce-headless-mongo ClusterIP None <none> 27017/TCP 2m28s hce-mongo ClusterIP 10.24.14.6 <none> 27017/TCP 2m28s hce-server-service LoadBalancer 10.24.11.20 34.67.119.129 9002:31108/TCP,8000:30292/TCP 2m28s license-service NodePort 10.24.13.205 <none> 80:31560/TCP 2m28s The EXTERNAL-IP might say pending for a few minutes while the load balancer is set up. Simply use your EXTERNAL-IP and PORT for the hce-frontend-service in this manner : to access Harness Chaos Engineering: http:// : . For example: http://34.71.48.119:9091/ This is an example IP and port. Yours will be different. ChaosCenter is displayed in your browser: Log in with the default credentials: Username: admin Password: litmus Once you log in, you'll be asked to set a new password.","title":"Access ChaosCenter"},{"location":"user-guide/installation/kubernetes/placeholder/#license-activation","text":"Next, upload your license file and click Activate License. You can request a license from the Harness Chaos Engineering sign up page . Drag and drop your license into Upload License File and click Activate License. You're ready to go.","title":"License Activation"},{"location":"user-guide/installation/kubernetes/placeholder/#summary","text":"You have successfully installed the Harness Chaos Engineering Control Plane and configured the Admin project","title":"Summary"},{"location":"user-guide/installation/kubernetes/placeholder/#next-steps","text":"Run your first Chaos Scenario on HCE after verifying the successful auto setup of the Self Chaos Delegate.","title":"Next Steps"},{"location":"user-guide/installation/openshift/placeholder/","text":"This is a placeholder for the respective doc content","title":"Placeholder"},{"location":"user-guide/manage-chaos-projects/placeholder/","text":"","title":"Manage Chaos Projects"},{"location":"user-guide/manage-chaos-scenarios/placeholder/","text":"","title":"Placeholder"},{"location":"user-guide/run-a-gameday/placeholder/","text":"","title":"Run a Gameday"},{"location":"user-guide/run-a-sample-chaos-scenario/ToDo/","text":"There is no reference to analytics here as we want to keep it simple Reconcile terminologies with latest development - and place appropriate screenshots Link to troubleshooting on why agent is inactive (after the note about node-port/firewall) Check Upated name for \"revert chaos\". (can the revert chaos step be turned off by default for the illustration workflow also? So that logs are accessible) (we could add a manual cleanup step for workflow as last step)","title":"ToDo"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/","text":"Run A Sample Chaos Scenario \u00b6 Objective \u00b6 Run your first chaos scenario (experiment) on a sample microservices application using HCE Familiarise yourself with the scenario (experiment) execution flow in the HCE platform Before You Begin \u00b6 This exercise makes use of podtato-head , a sample microservice application as the chaos target. We will utilize a pre-defined demo chaos scenario from the Enterprise ChaosHub (an artifact source containing chaos experiment and scenario definitions) that will install the application, subject it to chaos for a fixed time period and then cleanup the application. The experiment will leverage the auto-installed Chaos Delegate Self-Agent to carry out the chaos Note : The application install and cleanup steps are generally not part of chaos scenario definitions, and have been included in this case purely for illustrative purposes. To learn more about ChaosHub and Chaos Delegate , refer to the respective sections in technical reference documentation UseCase \u00b6 The podtato-head application consists of several microservices, each employed as a stateless Kubernetes Deployment, typically with multiple replicas each. The chaos experiment involves random kill of a replica pod belonging to the main microservice podtato-main (which is responsible for rendering the image of podtato-head on the web browser) The experiment also performs the auto-validation of the hypothesis that the podtato-head image is always rendered successfully and the web page is always accessible , notwithstanding the failure of a replica pod. Steps \u00b6 Step-1: Schedule a New Scenario \u00b6 In Harness Chaos Engineering ChaosCenter, click Chaos Scenarios , and then click Schedule a Chaos Scenario . The Scenario wizard appears. Step-2: Choose a Chaos Delegate \u00b6 Select the Chaos Delegate named Self-Agent . The Chaos Delegate connects the HCE control plane with the Kubernetes clusters which hosts your target applications/chaos subjects. The Self-Agent is a Chaos Delegate running on the same cluster as the HCE control plane. Note : If the Self-Agent does not appear, the related Kubernetes workload (a deployment named subscriber ) might not be in an active state. Wait a few minutes for it to reach steady state. If, after a while, it is still inactive, ensure that ingress to the litmusportal-server-service NodePort is not restricted and a firewall exception is present for that NodePort, if applicable. Once you've selected a Delegate, click Next . Step-3: Choose a Scenario \u00b6 Click Create a new scenario from one of the pre-defined chaos scenario templates . The ChaosHubs appear. Select Litmus ChaosHub . In search, enter podtato-head Select podtato-head and then click Next . In Chaos Scenario Settings , you can enter the Scenario name and the target namespace in the cluster. This predefined Scenario template runs in the litmus namespace. Click Next . Step-4: Tune the Scenario \u00b6 In this case, you can see the steps of the Scenario are already defined. Double-click on the diagram to zoom in. Here are the steps: install-application: Installs the podtato-head application (it is removed later by delete-application). install-chaos-experiments: Installs the Chaos Experiments (fault templates) in the Scenario. Here, it comprises pod-delete. pod-delete: This experiment deletes target pods at given intervals for a specific period. The recovery process of the deleted pods is taken care of by Kubernetes. revert-chaos: Removes the resources created (at runtime) to carry out the scenario execution. delete-application: Deletes the podtato-head application. Continue to walk through the wizard Note : In Target Application, in appns, you can see the target namespace for the experiment. In this Scenario, the target namespace is {{workflow.parameters.adminModeNamespace}}. The application isn't installed yet, so this runtime variable will resolve to the actual namespace where the application is installed. In Define the steady state for this application , you can see a probe defined for this experiment. This probe tests the steady-state hypothesis that the podtato-head website continues to be availabile during the execution of the experiment. Click Show Details for a quick look at the Probe In the details, you can see valuable information: URL: The application URL that you can use to view the application when the experiment is running Method: This is the criteria Harness will evaluate continuously during the experiment (see Continuous under Mode). In this case, HTTP GET requests are made to the URL and Harness Chaos Engineering verifies if it received an HTTP 200 response. Refer the technical reference documentation to learn more about Probes. Step-5 Adjust the Resiliency Score \u00b6 In this step, set a \"weightage\" for the pod-delete experiment within the scenario. This contributes towards the \"Resilience Score\" obtained for the scenario at the end of its execution. Resiliency Score is the measure of how resilient your Scenario is considering all the chaos experiments and their individual result points. The successful outcome of each test in a Scenario carries a certain weight, configured at this stage. This is typically useful when the scenario consists of multiple experiments. You can adjust the weights of the experiments in the Scenario by dragging the slider. For this exercise, just keep the default Resiliency Score. Click Next . Step-6: Choose a Schedule \u00b6 You can schedule the Scenario to run once, or run it on a recurring schedule. Click Schedule now , and click Next . Step-7: Run the Scenario \u00b6 Chaos Center shows a summary of the Scenario. At this, stage you could click edit to modify any of the settings. For now, we'll leave the defaults. Click Finish Click the Go to Chaos Scenario link to see the Scenario in action, or click Scenarios in the navigation to see it running. Click the name of the Scenario to visualize its progress. Note : Logs can be accessed for the experiment by clicking on the pod-delete step node. The logs will be available for a temporary period, i.e., until the revert-chaos step is executed. Step-8: View the Results \u00b6 Once the scenario is completed, click the pod-delete step in the graph view & view the Chaos Results You can see the success of the chaos experiment. Experiment Verdict: Pass Phase: Completed Fail Step: N/A Click Probe Result to view the success/failure of the steady-state hypothesis constraint (podtato-head website availability through pod deletion period): Probe Success Percentage: 100% Probe Status: Name: check-podtato-main-access-url Type: httpProbe Continuous: \"Passed \ud83d\udc4d \" Summary \u00b6 You have successfully executed your first chaos scenarion run using HCE Since the podtato-main service was deployed with multiple replicas, our hypothesis that the webpage continues to stay accessible despite killing one of the replicas was validated to be accurate. Next Steps \u00b6 Connect remote Chaos Delegates to the Chaos Center to discover workloads and carry out chaos scenarios on other Kubernetes clusters","title":"Run a Sample Chaos Scenario"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#run-a-sample-chaos-scenario","text":"","title":"Run A Sample Chaos Scenario"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#objective","text":"Run your first chaos scenario (experiment) on a sample microservices application using HCE Familiarise yourself with the scenario (experiment) execution flow in the HCE platform","title":"Objective"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#before-you-begin","text":"This exercise makes use of podtato-head , a sample microservice application as the chaos target. We will utilize a pre-defined demo chaos scenario from the Enterprise ChaosHub (an artifact source containing chaos experiment and scenario definitions) that will install the application, subject it to chaos for a fixed time period and then cleanup the application. The experiment will leverage the auto-installed Chaos Delegate Self-Agent to carry out the chaos Note : The application install and cleanup steps are generally not part of chaos scenario definitions, and have been included in this case purely for illustrative purposes. To learn more about ChaosHub and Chaos Delegate , refer to the respective sections in technical reference documentation","title":"Before You Begin"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#usecase","text":"The podtato-head application consists of several microservices, each employed as a stateless Kubernetes Deployment, typically with multiple replicas each. The chaos experiment involves random kill of a replica pod belonging to the main microservice podtato-main (which is responsible for rendering the image of podtato-head on the web browser) The experiment also performs the auto-validation of the hypothesis that the podtato-head image is always rendered successfully and the web page is always accessible , notwithstanding the failure of a replica pod.","title":"UseCase"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#steps","text":"","title":"Steps"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#step-1-schedule-a-new-scenario","text":"In Harness Chaos Engineering ChaosCenter, click Chaos Scenarios , and then click Schedule a Chaos Scenario . The Scenario wizard appears.","title":"Step-1: Schedule a New Scenario"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#step-2-choose-a-chaos-delegate","text":"Select the Chaos Delegate named Self-Agent . The Chaos Delegate connects the HCE control plane with the Kubernetes clusters which hosts your target applications/chaos subjects. The Self-Agent is a Chaos Delegate running on the same cluster as the HCE control plane. Note : If the Self-Agent does not appear, the related Kubernetes workload (a deployment named subscriber ) might not be in an active state. Wait a few minutes for it to reach steady state. If, after a while, it is still inactive, ensure that ingress to the litmusportal-server-service NodePort is not restricted and a firewall exception is present for that NodePort, if applicable. Once you've selected a Delegate, click Next .","title":"Step-2: Choose a Chaos Delegate"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#step-3-choose-a-scenario","text":"Click Create a new scenario from one of the pre-defined chaos scenario templates . The ChaosHubs appear. Select Litmus ChaosHub . In search, enter podtato-head Select podtato-head and then click Next . In Chaos Scenario Settings , you can enter the Scenario name and the target namespace in the cluster. This predefined Scenario template runs in the litmus namespace. Click Next .","title":"Step-3: Choose a Scenario"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#step-4-tune-the-scenario","text":"In this case, you can see the steps of the Scenario are already defined. Double-click on the diagram to zoom in. Here are the steps: install-application: Installs the podtato-head application (it is removed later by delete-application). install-chaos-experiments: Installs the Chaos Experiments (fault templates) in the Scenario. Here, it comprises pod-delete. pod-delete: This experiment deletes target pods at given intervals for a specific period. The recovery process of the deleted pods is taken care of by Kubernetes. revert-chaos: Removes the resources created (at runtime) to carry out the scenario execution. delete-application: Deletes the podtato-head application. Continue to walk through the wizard Note : In Target Application, in appns, you can see the target namespace for the experiment. In this Scenario, the target namespace is {{workflow.parameters.adminModeNamespace}}. The application isn't installed yet, so this runtime variable will resolve to the actual namespace where the application is installed. In Define the steady state for this application , you can see a probe defined for this experiment. This probe tests the steady-state hypothesis that the podtato-head website continues to be availabile during the execution of the experiment. Click Show Details for a quick look at the Probe In the details, you can see valuable information: URL: The application URL that you can use to view the application when the experiment is running Method: This is the criteria Harness will evaluate continuously during the experiment (see Continuous under Mode). In this case, HTTP GET requests are made to the URL and Harness Chaos Engineering verifies if it received an HTTP 200 response. Refer the technical reference documentation to learn more about Probes.","title":"Step-4: Tune the Scenario"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#step-5-adjust-the-resiliency-score","text":"In this step, set a \"weightage\" for the pod-delete experiment within the scenario. This contributes towards the \"Resilience Score\" obtained for the scenario at the end of its execution. Resiliency Score is the measure of how resilient your Scenario is considering all the chaos experiments and their individual result points. The successful outcome of each test in a Scenario carries a certain weight, configured at this stage. This is typically useful when the scenario consists of multiple experiments. You can adjust the weights of the experiments in the Scenario by dragging the slider. For this exercise, just keep the default Resiliency Score. Click Next .","title":"Step-5 Adjust the Resiliency Score"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#step-6-choose-a-schedule","text":"You can schedule the Scenario to run once, or run it on a recurring schedule. Click Schedule now , and click Next .","title":"Step-6: Choose a Schedule"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#step-7-run-the-scenario","text":"Chaos Center shows a summary of the Scenario. At this, stage you could click edit to modify any of the settings. For now, we'll leave the defaults. Click Finish Click the Go to Chaos Scenario link to see the Scenario in action, or click Scenarios in the navigation to see it running. Click the name of the Scenario to visualize its progress. Note : Logs can be accessed for the experiment by clicking on the pod-delete step node. The logs will be available for a temporary period, i.e., until the revert-chaos step is executed.","title":"Step-7: Run the Scenario"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#step-8-view-the-results","text":"Once the scenario is completed, click the pod-delete step in the graph view & view the Chaos Results You can see the success of the chaos experiment. Experiment Verdict: Pass Phase: Completed Fail Step: N/A Click Probe Result to view the success/failure of the steady-state hypothesis constraint (podtato-head website availability through pod deletion period): Probe Success Percentage: 100% Probe Status: Name: check-podtato-main-access-url Type: httpProbe Continuous: \"Passed \ud83d\udc4d \"","title":"Step-8: View the Results"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#summary","text":"You have successfully executed your first chaos scenarion run using HCE Since the podtato-main service was deployed with multiple replicas, our hypothesis that the webpage continues to stay accessible despite killing one of the replicas was validated to be accurate.","title":"Summary"},{"location":"user-guide/run-a-sample-chaos-scenario/placeholder/#next-steps","text":"Connect remote Chaos Delegates to the Chaos Center to discover workloads and carry out chaos scenarios on other Kubernetes clusters","title":"Next Steps"},{"location":"user-guide/upgrade-the-hce-platform/content/","text":"","title":"Content"},{"location":"user-guide/upgrade-the-hce-platform/control-plane/","text":"","title":"Upgrade the Control Plane"},{"location":"user-guide/upgrade-the-hce-platform/execution-plane/","text":"","title":"Upgrade the Execution Plane"}]}